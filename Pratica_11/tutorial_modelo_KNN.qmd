---
title: "Tutorial para classificar pinguins"
author: "Jhully Vitória"
lang: "pt"
date: 2024-08-23
format: html
editor: visual
---

## Objetivos deste tutorial

O objetivo deste tutorial é criar um modelo de classificação que seja capaz de prever a espécie de um pinguim a partir do seu peso, tamanho da asa, tamanho do bico e profuncidade do bico. Para isso, construiremos do zero um modelo knn.

## Lendo o conjunto

Vamos iniciar nosso trabalho lendo o pacote 'palmerpinguins' e salvando o conjunto em um objeto chamado 'pinguins'

``` {r}
library(palmerpenguins)
pinguins <- penguins
str(pinguins)
```

A seguir, vamos imprimir um resumo estatístico de cada uma das variáveis dos dados.

```{r}
summary(pinguins)
```

A partir do resumo das variáveis, percebemos alguns valores faltantes. Vamos removê-los.

```{r}
pinguins <- na.omit(pinguins)
summary(pinguins)
```

## Dividindo em treino e teste
```{r}
set.seed(1359)
pinguins <- pinguins[sample(nrow(pinguins)),]
n <- round(0.8*nrow(pinguins)) # pegando 80% do conj. e jogando no treino

treino <- pinguins[1:n,]
teste <-  pinguins[-(1:n),]
```

## Criando Gráficos

Vamos identificar padrões no conjunto de treinamento para construirmos nosso modelo


1. crie um gráfico boxplot eixo x especies e y tamanho da asa

```{r}
library(ggplot2)
ggplot(data = treino, mapping = aes(x = species, y = flipper_length_mm)) + geom_boxplot()
```

2. grafico de pontos, x = peso, y = tamanho do bico, colorir por especie
```{r}
ggplot(data = treino, mapping = aes(x = body_mass_g, y = bill_length_mm, color = species)) + geom_point()
```

## Classificando o primeiro pinguim do teste

```{r}
distancias <- c()
for(k in 1:nrow(treino)){
  distancias[k] <- sqrt((teste$body_mass_g[1] - treino$body_mass_g[k])**2 + (teste$bill_length_mm[1] - treino$bill_length_mm[k])**2)
}
treino$species[order(distancias)[1]]
teste$species[1]

```

#rascunho
#> x <- c(10, 4, 8)
#> sort(x)
#[1]  4  8 10
#> order(x)
#[1] 2 3 1

```{r}
classificacao <- c()
distancias <- c()
for(j in 1:nrow(teste)){
for(k in 1:nrow(treino)){
  distancias[k] <- sqrt((teste$body_mass_g[j] - treino$body_mass_g[k])**2 + (teste$bill_length_mm[j] - treino$bill_length_mm[k])**2)
  }
  classificacao[j] <- as.character(treino$species[order(distancias)[1]])
}
mean(classificacao == teste$species)
```